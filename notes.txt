- npx create-react-app é o comando para criar um projeto React Native.
- npx create-react-app my-app -t é o comando para criar um projeto React Native com o template especificado.
- npx create-react-app --help é o comando para ver as opções de ajuda do create-react-app.
- npm start --tunnel é o comando para iniciar o servidor de desenvolvimento do React Native com um túnel. Na primeira
vez que executar o comando ele vai solicitar a install do NGRoK, que é uma ferramenta para criar túneis para acessar o
servidor de desenvolvimento de qualquer lugar.
- Expo Go é o framework mais popular para desenvolvimento de aplicativos React Native.

- Expo é diferente de Expo Go, pois Expo é um framework para desenvolvimento de aplicativos React Native, enquanto Expo
Go é um aplicativo que permite visualizar aplicativos React Native em desenvolvimento no seu dispositivo móvel.

- Diferentemente da Web, tudo em React Native está encapsulado em componentes, que são blocos de construção do
aplicativo.

- Um React Native App consiste de duas partes principais: o código JavaScript e o código nativo do App.

- View é o componente mais básico do React Native, pode ser comparado ao div do HTML, é usado para criar contêineres
e layouts.

- Todos os layouts em React usam o Flexbox, com algumas diferenças:
    - all elements have display: flex by default
    - flexDirection defaults to to column (instead of row)
    - alignContent defaults to flex-start (instead of stretch)
    - flexShrink defaults to 0 (instead of 1)
    - the flex parameter only supports a single number

- Text é o componente usado para exibir texto no React Native, pode ser comparado ao p do HTML. A única diferença é que
todos os textos precisam estar dentro de um componente Text, não é possível exibir texto fora de um componente Text.

- A medida padrão em React Native, não é pixel e sim display points, que é uma unidade de medida relativa ao tamanho do
dispositivo. Isso significa que o tamanho dos elementos será proporcional ao tamanho da tela do dispositivo, e não fixo
em pixels. Isso é importante para garantir que o layout do aplicativo seja responsivo e se adapte a diferentes tamanhos
de tela.

- O pixel ratio é a proporção entre os pixels físicos e os pixels lógicos na tela do dispositivo. Em dispositivos com
alta densidade de pixels, como smartphones e tablets, o pixel ratio é maior que 1, o que significa que há mais pixels
físicos do que pixels lógicos. Isso permite que os elementos do aplicativo sejam exibidos com mais detalhes e clareza,
mesmo em telas menores. Em dispositivos com baixa densidade de pixels, o pixel ratio é menor que 1, o que significa que
há menos pixels físicos do que pixels lógicos. Isso pode resultar em elementos do aplicativo sendo exibidos com menos
detalhes e clareza, especialmente em telas maiores. O React Native usa o pixel ratio para ajustar automaticamente o
tamanho dos elementos do aplicativo, garantindo que eles sejam exibidos corretamente em diferentes tamanhos de tela e
densidades de pixels.

- Não é possível um estilo global para todos os arquivos em React Native, pois cada componente tem seu próprio escopo de
estilo. No entanto, é possível criar um arquivo de estilos compartilhados e importá-lo em cada componente que precisar
usar esses estilos. Isso permite que você reutilize estilos comuns em vários componentes, mas ainda assim mantém o
escopo de estilo separado para cada componente. Além disso, é possível usar bibliotecas de estilos como Styled
Components ou Emotion para criar estilos globais que podem ser aplicados a vários componentes.

- O mais comum para estilos em React Native é que cada página tenha suas próprias definições de estilo, que ficam no
final de cada arquivo.

- Para iniciar a transmissão use "npx expo start --tunnel".

- Existe uma tag Button no React Native, mas ela não é tão utilizada pois o elemento gerado não permite personalizações.

- Para criar um botão é através dos elementos, TouchableOpacity, Pressable.

- O item de Alerta aceita alguns parâmetros, como titulo, a mensagem, os botões. Porém, por usar uma mensagem nativa dos
sistemas, ela sempre terá um estilo diferente dependendo do sistema operacional.

- Se você precisa personalizar o alerta, você deve criar um Custom Dialog, que na realidade o que será construído é um
modal em full screen.
